import { useState, useEffect } from "react";

const API_KEY = "a1d0d8c07f0c4947a9e210cfbb8a67c8";

export default function Home() {
  const [articles, setArticles] = useState([]);
  const [category, setCategory] = useState("general");
  const [search, setSearch] = useState("");
  const [loading, setLoading] = useState(false);

  const categories = ["general", "business", "technology", "sports", "entertainment"];

  useEffect(() => {
    fetchNews();
  }, [category]);

  async function fetchNews() {
    setLoading(true);
    let url = `https://newsapi.org/v2/top-headlines?language=en&category=${category}&pageSize=20&apiKey=${API_KEY}`;
    if (search) {
      url = `https://newsapi.org/v2/everything?q=${search}&language=en&pageSize=20&apiKey=${API_KEY}`;
    }
    const res = await fetch(url);
    const data = await res.json();
    if (data.articles) {
      setArticles(data.articles);
    }
    setLoading(false);
  }

  function handleSearch(e) {
    e.preventDefault();
    fetchNews();
  }

  return (
    <div style={{ backgroundColor: "#000", color: "#fff", minHeight: "100vh", padding: "1rem", fontFamily: "Arial, sans-serif" }}>
      <h1 style={{ textAlign: "center" }}>Terminalnews</h1>

      <nav style={{ marginBottom: "1rem", textAlign: "center" }}>
        {categories.map((cat) => (
          <button
            key={cat}
            onClick={() => {
              setCategory(cat);
              setSearch("");
            }}
            style={{
              margin: "0 0.3rem",
              padding: "0.5rem 1rem",
              backgroundColor: cat === category ? "#fff" : "#222",
              color: cat === category ? "#000" : "#fff",
              border: "none",
              cursor: "pointer",
            }}
          >
            {cat.charAt(0).toUpperCase() + cat.slice(1)}
          </button>
        ))}
      </nav>

      <form onSubmit={handleSearch} style={{ textAlign: "center", marginBottom: "1rem" }}>
        <input
          type="text"
          placeholder="Search news..."
          value={search}
          onChange={(e) => setSearch(e.target.value)}
          style={{ padding: "0.5rem", width: "60%", maxWidth: "300px", borderRadius: "4px", border: "none" }}
        />
        <button type="submit" style={{ marginLeft: "0.5rem", padding: "0.5rem 1rem", cursor: "pointer" }}>
          Search
        </button>
      </form>

      {loading ? (
        <p style={{ textAlign: "center" }}>Loading news...</p>
      ) : articles.length === 0 ? (
        <p style={{ textAlign: "center" }}>No news found.</p>
      ) : (
        <div style={{ display: "grid", gridTemplateColumns: "repeat(auto-fit, minmax(280px, 1fr))", gap: "1rem" }}>
          {articles.map((article, i) => (
            <a
              key={i}
              href={article.url}
              target="_blank"
              rel="noopener noreferrer"
              style={{ color: "#fff", textDecoration: "none", border: "1px solid #333", borderRadius: "8px", overflow: "hidden" }}
            >
              {article.urlToImage && (
                <img src={article.urlToImage} alt={article.title} style={{ width: "100%", height: "150px", objectFit: "cover" }} />
              )}
              <div style={{ padding: "0.5rem" }}>
                <h3 style={{ margin: "0 0 0.5rem 0", fontSize: "1.1rem" }}>{article.title}</h3>
                <p style={{ fontSize: "0.9rem", color: "#ccc" }}>{article.source.name}</p>
              </div>
            </a>
          ))}
        </div>
      )}
    </div>
  );
}
